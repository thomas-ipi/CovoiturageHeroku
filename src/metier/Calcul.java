package metier;

import model.UserBean;

public class Calcul {

	 public static double distance(double lat1, double lon1, double lat2, double lon2, String unit) {
	      double theta = lon1 - lon2;
	      double dist = Math.sin(deg2rad(lat1)) * Math.sin(deg2rad(lat2)) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.cos(deg2rad(theta));
	      dist = Math.acos(dist);
	      dist = rad2deg(dist);
	      dist = dist * 60 * 1.1515;
	      if (unit == "K") {
	        dist = dist * 1.609344;
	      } else if (unit == "N") {
	        dist = dist * 0.8684;
	        }
	      return (dist);
	    }

	    /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
	    /*::  This function converts decimal degrees to radians             :*/
	    /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
	    private static double deg2rad(double deg) {
	      return (deg * Math.PI / 180.0);
	    }

	    /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
	    /*::  This function converts radians to decimal degrees             :*/
	    /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
	    private static double rad2deg(double rad) {
	      return (rad * 180.0 / Math.PI);
	    }

	    public static boolean trouverUser(String coordonnees, UserBean user, double rayon) {
	    	
	    	boolean result = false;

	    	String tmp= coordonnees.substring(1, coordonnees.length() - 1);
			tmp = tmp.replace(")(",";");
			tmp = tmp.replace(" ", "");
			
			String[] coord = tmp.split(";");
	    	
	    	String coord_orig=user.getLatlong();
	    	
	    	coord_orig = coord_orig.replace(" ", "");
	    	System.out.println(coord_orig);
	    	String[] posi_orig = coord_orig.split(",");
	    	
	    	for (int i = 0; i < coord.length; i++) {
				//
	    		String[] posi_courant = coord[i].split(",");
//	    		
//	    		System.out.println(Double.parseDouble(posi_orig[0]));
//	    		System.out.println(Double.parseDouble(posi_orig[1]));
//	    		System.out.println(Double.parseDouble(posi_orig[1]));
//	    		System.out.println(Double.parseDouble(posi_courant[0]));
//	    		System.out.println(Double.parseDouble(posi_courant[1]));
	    		
	    		
	    		double l = distance(Double.parseDouble(posi_orig[0]) , Double.parseDouble(posi_orig[1]), Double.parseDouble(posi_courant[0]) , Double.parseDouble(posi_courant[1]), "K");
	    		if (l<=rayon) {
	    			user.setKm(new Double(l).longValue());
	    			result = true;
	    		}
			}
	    	
	    	return result;
	    }
	    
	    
//	    public static void main(String[] args) {
//			
//	    	
//	String 		profil = "(43.60466, 1.44459)(43.60409000000001, 1.4447500000000002)(43.60403, 1.44477)(43.60398000000001, 1.4445700000000001)(43.603970000000004, 1.44443)(43.60387, 1.44452)(43.603590000000004, 1.44477)(43.603500000000004, 1.44479)(43.60293, 1.4448)(43.60251, 1.4448100000000001)(43.6024, 1.44479)(43.60226, 1.44462)(43.60221000000001, 1.4445700000000001)(43.60213, 1.44466)(43.60192000000001, 1.4448100000000001)(43.601710000000004, 1.4449400000000001)(43.601470000000006, 1.445)(43.60143, 1.4450200000000002)(43.60063, 1.4450800000000001)(43.600460000000005, 1.4450800000000001)(43.60043, 1.44459)(43.60038, 1.44378)(43.60032, 1.44344)(43.60002, 1.44219)(43.59976, 1.4412500000000001)(43.599720000000005, 1.4410500000000001)(43.59962, 1.4405700000000001)(43.59949, 1.4405700000000001)(43.598800000000004, 1.4404100000000002)(43.597840000000005, 1.4401700000000001)(43.59754, 1.44019)(43.595150000000004, 1.4405100000000001)(43.594680000000004, 1.4405800000000002)(43.59456, 1.4406400000000001)(43.59452, 1.4406)(43.59447, 1.4406100000000001)(43.594440000000006, 1.4407100000000001)(43.594460000000005, 1.44077)(43.59409, 1.4413500000000001)(43.59351, 1.44242)(43.59333, 1.44276)(43.59326, 1.4429100000000001)(43.592830000000006, 1.4425400000000001)(43.59226, 1.44202)(43.5921, 1.4418600000000001)(43.59179, 1.44157)(43.591710000000006, 1.44148)(43.591620000000006, 1.4414200000000001)(43.591590000000004, 1.4414)(43.59154, 1.44141)(43.591480000000004, 1.44137)(43.591370000000005, 1.4413300000000002)(43.591080000000005, 1.4412800000000001)(43.5906, 1.4411900000000002)(43.590360000000004, 1.4411100000000001)(43.59008, 1.4409900000000002)(43.589690000000004, 1.4407800000000001)(43.58946, 1.44062)(43.58874, 1.43999)(43.58838, 1.43972)(43.588100000000004, 1.43955)(43.587680000000006, 1.43938)(43.58709, 1.4392800000000001)(43.58661, 1.43931)(43.58612, 1.4393900000000001)(43.58502, 1.4395600000000001)(43.584610000000005, 1.4395600000000001)(43.58424, 1.43951)(43.58415, 1.43948)(43.58406, 1.43947)(43.583580000000005, 1.4393900000000001)(43.58319, 1.4392900000000001)(43.582950000000004, 1.4392200000000001)(43.582390000000004, 1.4389900000000002)(43.581610000000005, 1.4385800000000002)(43.581320000000005, 1.4384100000000001)(43.58041, 1.4376700000000002)(43.58025000000001, 1.43754)(43.57987000000001, 1.4372600000000002)(43.57927, 1.4369100000000001)(43.57896, 1.43676)(43.578660000000006, 1.4366500000000002)(43.578210000000006, 1.43653)(43.57752000000001, 1.43635)(43.57717, 1.4363000000000001)(43.57659, 1.43619)(43.57647, 1.43622)(43.57618, 1.43618)(43.57612, 1.4362100000000002)(43.57587, 1.4362100000000002)(43.57569, 1.4362100000000002)(43.5754, 1.43632)(43.57526, 1.4364000000000001)(43.575140000000005, 1.4364700000000001)(43.57497, 1.4366)(43.574760000000005, 1.4368)(43.57428, 1.43765)(43.573980000000006, 1.4382300000000001)(43.5739, 1.43849)(43.57387000000001, 1.43863)(43.57385, 1.4388400000000001)(43.57385, 1.43917)(43.57387000000001, 1.43937)(43.57392, 1.43961)(43.57421, 1.44032)(43.574450000000006, 1.4408100000000001)(43.57457, 1.4410800000000001)(43.574690000000004, 1.4412)(43.574850000000005, 1.44127)(43.57522, 1.44134)(43.575390000000006, 1.4414300000000002)(43.57555000000001, 1.4415900000000001)(43.57564000000001, 1.44178)(43.57573, 1.4420700000000001)(43.57582, 1.4425500000000002)(43.575900000000004, 1.4433500000000001)(43.57584000000001, 1.4438000000000002)(43.575770000000006, 1.4441100000000002)(43.57555000000001, 1.4448200000000002)(43.57394, 1.4491600000000002)(43.572790000000005, 1.45222)(43.572570000000006, 1.45297)(43.57245, 1.45361)(43.57238, 1.4540600000000001)(43.572320000000005, 1.4546800000000002)(43.572230000000005, 1.45679)(43.57208000000001, 1.4596200000000001)(43.572030000000005, 1.46049)(43.572010000000006, 1.4617600000000001)(43.572050000000004, 1.4623000000000001)(43.572120000000005, 1.4628)(43.572300000000006, 1.4635)(43.57244, 1.46392)(43.572720000000004, 1.4645400000000001)(43.57294, 1.4649200000000002)(43.57334, 1.4655)(43.57349000000001, 1.4657000000000002)(43.57376, 1.4661600000000001)(43.573910000000005, 1.4664700000000001)(43.574020000000004, 1.4667500000000002)(43.57414000000001, 1.46714)(43.574220000000004, 1.46747)(43.5743, 1.4679200000000001)(43.57432, 1.46819)(43.57433, 1.4689)(43.574270000000006, 1.4695300000000002)(43.57419, 1.4700000000000002)(43.574090000000005, 1.47039)(43.573930000000004, 1.4708100000000001)(43.573800000000006, 1.4711100000000001)(43.57347, 1.4717000000000002)(43.572900000000004, 1.47265)(43.569750000000006, 1.4779900000000001)(43.567980000000006, 1.4809100000000001)(43.56743, 1.48174)(43.56703, 1.48229)(43.565870000000004, 1.48378)(43.564510000000006, 1.4854600000000002)(43.56425, 1.4856300000000002)(43.56318, 1.4868800000000002)(43.56223000000001, 1.4879600000000001)(43.56183, 1.48831)(43.56157, 1.48849)(43.56134, 1.4886100000000002)(43.56091000000001, 1.48882)(43.56085, 1.48886)(43.560050000000004, 1.4892100000000001)(43.55973, 1.48936)(43.55894000000001, 1.4897)(43.55738, 1.4903400000000002)(43.55684, 1.4905100000000002)(43.556290000000004, 1.49062)(43.555980000000005, 1.49065)(43.555780000000006, 1.49069)(43.55565000000001, 1.4907400000000001)(43.55545, 1.4908500000000002)(43.555260000000004, 1.4910100000000001)(43.555110000000006, 1.4911800000000001)(43.55498, 1.49137)(43.554860000000005, 1.4915900000000002)(43.55476, 1.49187)(43.55471, 1.4920600000000001)(43.554660000000005, 1.4923600000000001)(43.55465, 1.4928000000000001)(43.55469, 1.4930800000000001)(43.55474, 1.4933200000000002)(43.55489, 1.49388)(43.554930000000006, 1.49425)(43.55494, 1.4945300000000001)(43.55491000000001, 1.49485)(43.554860000000005, 1.4951500000000002)(43.554790000000004, 1.4953800000000001)(43.554700000000004, 1.49561)(43.55458, 1.4958300000000002)(43.55435000000001, 1.4961600000000001)(43.554100000000005, 1.4964000000000001)(43.553830000000005, 1.49655)(43.5533, 1.4967100000000002)(43.552910000000004, 1.49682)(43.55277, 1.4968800000000002)(43.55268, 1.4969400000000001)(43.552550000000004, 1.49699)(43.551930000000006, 1.4972500000000002)(43.55136, 1.4975)(43.55089, 1.49774)(43.550360000000005, 1.49808)(43.54997, 1.4983600000000001)(43.549510000000005, 1.4987700000000001)(43.548300000000005, 1.4999300000000002)(43.546760000000006, 1.50144)(43.54529, 1.5028400000000001)(43.54482, 1.50333)(43.544630000000005, 1.5035900000000002)(43.5446, 1.5035600000000002)(43.54448, 1.50353)(43.544410000000006, 1.5035600000000002)(43.54433, 1.50364)(43.544290000000004, 1.5037900000000001)(43.54428, 1.5038900000000001)(43.54430000000001, 1.50398)(43.54435, 1.5040900000000001)(43.54446, 1.5041600000000001)(43.54458, 1.5041600000000001)(43.54468000000001, 1.5041900000000001)(43.544760000000004, 1.5042600000000001)(43.544880000000006, 1.50445)(43.545010000000005, 1.5047700000000001)(43.54513, 1.5050800000000002)(43.54536, 1.5056)(43.545370000000005, 1.50573)(43.545440000000006, 1.50591)(43.545440000000006, 1.5059300000000002)(43.54545, 1.5060000000000002)(43.54549, 1.50605)(43.54551, 1.5060600000000001)(43.545550000000006, 1.5061000000000002)(43.54567, 1.5062900000000001)(43.545860000000005, 1.5065400000000002)(43.545970000000004, 1.5066400000000002)(43.5461, 1.50672)(43.54641, 1.5068000000000001)(43.546730000000004, 1.5068400000000001)(43.547720000000005, 1.5069500000000002)(43.54805, 1.5070400000000001)(43.548120000000004, 1.5070700000000001)(43.54813, 1.5071100000000001)(43.548140000000004, 1.5071400000000001)(43.54813, 1.5072)(43.548120000000004, 1.5073100000000001)(43.548140000000004, 1.5080000000000002)(43.548140000000004, 1.50814)(43.548100000000005, 1.50835)(43.54807, 1.50842)(43.54764, 1.5090000000000001)(43.54731, 1.5093)(43.546710000000004, 1.5096600000000002)(43.54648, 1.50984)(43.54632, 1.50994)(43.546260000000004, 1.5099600000000002)(43.546240000000004, 1.5099600000000002)(43.546200000000006, 1.50997)(43.54616, 1.51001)(43.546150000000004, 1.51008)(43.546150000000004, 1.5101600000000001)(43.54618000000001, 1.5102200000000001)(43.546220000000005, 1.51024)(43.54636000000001, 1.51048)(43.54639, 1.51055)(43.54656000000001, 1.5107800000000002)(43.546640000000004, 1.5108700000000001)(43.546730000000004, 1.51106)(43.546800000000005, 1.5112100000000001)(43.546850000000006, 1.5114)(43.546870000000005, 1.51154)(43.54679, 1.51187)(43.546690000000005, 1.5120500000000001)(43.54655, 1.51221)(43.54574, 1.51303)(43.545370000000005, 1.5134400000000001)";
//			
//			String tmp= profil.substring(1, profil.length() - 1);
//			System.out.println(tmp);
//			tmp = tmp.replace(")(",";");
//			tmp = tmp.replace(" ", "");
//			
//			String[] coord = tmp.split(";");
//	    	
//	    	String coord_orig="43.546260000000004, 1.5099600000000002";
//	    	coord_orig = coord_orig.replace(" ", "");
//	    	
//	    	String[] posi_orig = coord_orig.split(",");
////	    	
//	    	for (int i = 0; i < coord.length; i++) {
//				//
//	    		String[] posi_courant = coord[i].split(",");
//	    		double l = distance(Double.parseDouble(posi_orig[0]) , Double.parseDouble(posi_orig[1]), Double.parseDouble(posi_courant[0]) , Double.parseDouble(posi_courant[1]), "K");
//	    		System.out.println(l);
//			}
//	    	
//		}
}
